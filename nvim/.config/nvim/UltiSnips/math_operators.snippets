global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal


context "math()"
snippet jv "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet jr "supscript" iA
^{$1}$0
endsnippet

context "math()"
snippet '(\s*)je' "Equal Symbol" riA
 = $0
endsnippet

priority 300
context "math()"
snippet '\\sum_\{([^}]*)je' "equal in sum" Ar
\sum_{`!p snip.rv = match.group(1)` = ${1:1}}^{${0:n}
endsnippet 

context "math()"
snippet '(\s*)jm' "Minus Symbol" riA
 - $0
endsnippet

context "math()"
snippet '(\s*)jp' "Plus Symbol" riA
 + $0
endsnippet

context "math()"
snippet '(\s*)js' "square" iAr
^{2}$0
endsnippet

context "math()"
snippet jq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet `(?<!\\)(lq|leq)` "Less than or equal to" Ar
\leq $0
endsnippet

context "math()"
snippet `(?<!\\)(gq|geq)` "Greater than or equal to" rA
\geq $0
endsnippet

context "math()"
snippet `(?<!\\)sum` "sum" Ar
\sum_{$1} $0
endsnippet

priority 100
context "math()"
snippet `->|(?<!\\)to` "to" A
\to $0
endsnippet

priority 100
context "math()"
snippet `<\s?->` "to" A
\leftrightarrow $0
endsnippet

########## Subscripts and Superscripts ##########
context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet `(?<=\S)(\s*)(?<!\{)([a-zA-Z])\2` "auto subscript" wrA
_{`!p snip.rv = match.group(2)`}$0
endsnippet
