global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def not_math():
	return not math()

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal

snippet newhomework "New Homework Document" bA
\documentclass[12pt, answers]{exam}
\def\showsolution{1}  % Comment to hide solutions
\def\showcomment{1}  % Comment to hide question comments
\input{homework}
% Remove labels from questions
% \qformat{} 

\title{${1:Title}}
\author{Ot\'avio Dittrich Moreira}
\date{\today}

\begin{document}

\maketitle

\tableofcontents
\clearpage 
$0

\end{document}
`ln -s ~/.config/latex/preamble/homework.tex`
endsnippet

snippet newdoc "New Document" bA
\documentclass{article}
\def\showsolution{1}  % Comment to hide solutions
\def\showcomment{1}  % Comment to hide question comments
\input{"~/.config/latex/preamble/classnote.tex"}

\title{${1:Title}}
\author{Ot\'avio Dittrich Moreira}
\date{\today}

\begin{document}

\maketitle

\tableofcontents
\clearpage 
$0

\end{document}
endsnippet

snippet '\\input\{(.*)\}' "Create file input" r
`!p filename = match.group(1); os.makedirs(os.path.dirname(filename), exist_ok=True) if '/' in filename else None; open(filename, "a").close(); snip.rv = match.group(0)`
endsnippet

snippet genfiles "Create file input" b
`!p 
text = snip.v.text
matches = re.findall(r"\\input\{([^}]*)\}", text)
for m in matches:
    filename = m
    os.makedirs(os.path.dirname(filename), exist_ok=True) if '/' in filename else None
    open(filename, "a").close()
snip.rv = text.lstrip().rstrip("\n")`
endsnippet

snippet begg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet sec "Section" b
\section{${1:Section Title}}
$0
endsnippet

snippet '(ssec|subsec)' "Subsection" br
\subsection{${1:Subsection Title}}
$0
endsnippet

snippet '(sssec|subsubsec)' "Subsubsection" br
\subsubsection{${1:Subsubsection Title}}
$0
endsnippet

snippet bthm "Theorem" bA
\begin{theorem}{${1:Title}}{`!p snip.rv = re.sub(r'\W+', '-', t[1]).lower()`}
	$2
\end{theorem}
$0
endsnippet

snippet bprop "Proposition" bA
\begin{proposition}{${1:Title}}{`!p snip.rv = re.sub(r'\W+', '-', t[1]).lower()`}
	$2
\end{proposition}
$0
endsnippet

snippet blemm "Lemma" bA
\begin{lemma}{}{}
	${1:${VISUAL}}
\end{lemma}
$0
endsnippet

snippet bcor "Corollary" bA
\begin{corollary}{}{}
	${1:${VISUAL}}
\end{corollary}
$0
endsnippet

snippet bfa "Fact" bA
\begin{fact}{}{}
	${1:${VISUAL}}
\end{fact}
$0
endsnippet

snippet bqu "Question" bA
\begin{question}{}{}
	${1:${VISUAL}}
\end{question}
$0
endsnippet

snippet bpar "Parts" bA
`!p
if snip.v.text is not None and len(snip.v.text) > 0:
    pattern = r'^\s*(\([a-z]\)|[1-9]\.)'
    new_text = re.sub(pattern, r'\\part', snip.v.text, flags=re.MULTILINE).rstrip("\n")
    new_text = re.sub(r'^(?!$)', '    ', new_text, flags=re.MULTILINE)
    snip.rv = """
\\begin{parts}
""" + new_text
else:
    snip.rv = """
\\begin{parts}
	\part """`$1
\end{parts}
$0
endsnippet

snippet bsol "Solution" bA
\begin{solution}{}{}
	${1:${VISUAL}}
\end{solution}
$0
endsnippet

snippet bexer "Exercise" bA
\begin{exercise}{}{}
	${1:${VISUAL}}
\end{exercise}
$0
endsnippet

snippet bexam "Example" bA
\begin{example}{}{}
	${1:${VISUAL}}
\end{example}
$0
endsnippet

snippet bdef "Definition" bA
\begin{definition}{${1:Title}}{`!p snip.rv = re.sub(r'\W+', '-', t[1]).lower()`}
	$2
\end{definition}
$0
endsnippet

snippet brmk "Remark" bA
\begin{remark}{}{}
	${1:${VISUAL}}
\end{remark}
$0
endsnippet

snippet bpf "Proof" bA
\begin{proof}{}{}
	${1:${VISUAL}}
\end{proof}
$0
endsnippet

snippet ben "Enumerate" bA
\begin{enumerate}
	\item ${1:${VISUAL}}
\end{enumerate}
$0
endsnippet

context "not_math()"
snippet '-\s' "Init Itemize" bAr 
\begin{itemize}
	\item $1
\end{itemize}$0
endsnippet

priority 100
context "env('itemize') or env('enumerate')"
snippet item "Item" bA
\item $0
endsnippet
priority 100

context "env('itemize') or env('enumerate')"
snippet '-\s' "Item" bAr
\item $0
endsnippet

snippet beq "Equations" bA
\begin{equation}
	\label{eq:$1}
	${2:${VISUAL}}
.\end{equation}
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet

snippet emph "Emphasize" bA
\emph{${1:Text}}$0
endsnippet


##### Beamer Snippets #####
snippet newbeamer "New Beamer Document" b
\documentclass{beamer}
\input{"~/.config/latex/preamble/beamer.tex"}

\title{${1:Presentation Title}}
\author{Ot\'avio Dittrich Moreira}
\date{\today}

\begin{document}

\begin{frame}
  \titlepage
\end{frame}

\begin{frame}{Outline}
  \tableofcontents
\end{frame}

$0

\end{document}
endsnippet

snippet nf "Beamer Frame" bA
\begin{frame}{${1:Frame Title}}
	$0
\end{frame}
endsnippet

snippet fig2side "Two side-by-side figures" b
\begin{columns}
\column{0.5\textwidth}
\centering
\includegraphics[width=\linewidth]{${2:fig1.png}}\\
{\footnotesize ${3:Caption 1}}

\column{0.5\textwidth}
\centering
\includegraphics[width=\linewidth]{${4:fig2.png}}\\
{\footnotesize ${5:Caption 2}}
\end{columns}
endsnippet

snippet par "Paragraph" bA
\paragraph{${1:${VISUAL}}} $0
endsnippet


context "math()"
snippet `\scase` "cases" rA
 \begin{cases}
	${1:${VISUAL}}
\end{cases}
endsnippet
