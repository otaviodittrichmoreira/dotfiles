{
  "numbers from 1 to 10": "Print numbers from 1 to 10 using a loop:\n```bash\nfor i in {1..10}; do echo $i; done\n```\n\nAlternatively, use `seq` to generate the sequence:\n```bash\nseq 1 10\n``` \n\nDisplay numbers in a single line separated by spaces:\n```bash\necho {1..10}\n```",
  "list all files": "List all files in the current directory:\n```bash\nls\n```\n\nList all files including their details:\n```bash\nls -l\n```\n\nList all files including hidden ones:\n```bash\nls -a\n```\n\nList all files with detailed view and hidden ones:\n```bash\nls -la\n```",
  "how much free space?": "To check the amount of free disk space on all filesystems:\n```bash\ndf -h\n```\n\nTo display the available disk space on a specific filesystem (e.g., /dev/sda1):\n```bash\ndf -h /dev/sda1\n```\n\nTo get a summary of the free space on the root filesystem:\n```bash\ndf -h /\n```\n\nFor a more detailed view, including inodes:\n```bash\ndf -i\n```",
  "test my wifi connection": "To ping a reliable external server and test your Wi-Fi connection's responsiveness:\n```bash\nping -c 4 google.com\n```\n\nTo check the Wi-Fi connection details including the signal strength:\n```bash\niwconfig\n```\n\nTo view the network interfaces and their connection statuses:\n```bash\nifconfig\n```\n\nTo ensure the DNS is working by resolving a domain:\n```bash\ndig google.com\n```\n\nTo check for any dropped packets during the connection:\n```bash\nping -c 100 google.com | grep 'loss'\n```",
  "how to list all disks?": "List all mounted filesystems and their disk usage:\n```bash\ndf -h\n```\n\nList all block devices, including disks:\n```bash\nlsblk\n```\n\nDisplay detailed information about all disks:\n```bash\nfdisk -l\n```\n\nShow information about disks using `parted`:\n```bash\nparted -l\n```",
  "in percentage, how much free space I have in my device?": "To display the free space in percentage on your system:\n\nUsing `df` to show percentage of free space:\n```bash\ndf -h --output=source,pcent\n```\n\nAlternative option for a more detailed output:\n```bash\ndf -h | awk '{print $5 \" \" $1}' | grep -vE '^Filesystem|tmpfs|cdrom'\n```\n\nTo get just the percentage of free space of the root filesystem:\n```bash\ndf / | grep / | awk '{ print $4 }'\n```",
  "change owner of /media/otavio/disk to otavio": "Change the owner of the specified directory to `otavio` recursively:\n```bash\nsudo chown -R otavio /media/otavio/disk\n```\n\nChange the owner of the specified directory only (not recursively):\n```bash\nsudo chown otavio /media/otavio/disk\n```",
  "": "",
  "local speedtest with ethernet with another debian server": "Install `speedtest-cli` on both servers for testing speed:\n\nInstall `speedtest-cli`:\n```bash\nsudo apt update && sudo apt install speedtest-cli\n```\n\nRun the speed test from the first server:\n```bash\nspeedtest-cli --server <server_ip>\n```\n\nRun the speed test on the second server targeting the first server:\n```bash\nspeedtest-cli --server <your_first_server_ip>\n```\n\nPerform a simpler network latency test with `ping`:\n```bash\nping -c 5 <another_debian_server_ip>\n```\n\nUse `iperf` for more detailed throughput testing (install on both servers):\n```bash\nsudo apt install iperf\n```\n\nStart the `iperf` server on one Debian server:\n```bash\niperf -s\n```\n\nRun the `iperf` client from the other server to test bandwidth:\n```bash\niperf -c <server_ip>\n```",
  "a": "",
  "Faça uma varredura em todos os ips locais 192.168.1.1": "Execute uma varredura em uma faixa específica de IPs, no caso de 192.168.1.0 a 192.168.1.255:\n```bash\nnmap -sn 192.168.1.0/24\n```\n\nUsando `fping` para varrer rapidamente todos os IPs na mesma faixa:\n```bash\nfping -a -g 192.168.1.0/24\n```\n\nUtilizando `ping` em um loop para checar cada IP individualmente:\n```bash\nfor ip in 192.168.1.{1..255}; do ping -c 1 $ip; done\n```",
  "Faça um scanner de todas as portas abertas no ip 192.168.1.35": "Para escanear as portas abertas no IP 192.168.1.35 usando o Nmap:\n\nUsar o Nmap para escanear todas as portas TCP:\n```bash\nnmap -p- 192.168.1.35\n```\n\nUsar o Nmap para escanear portas padrão e além disso mostrar a versão dos serviços:\n```bash\nnmap -sV 192.168.1.35\n```\n\nUsar o Nmap para escanear portas UDP:\n```bash\nnmap -sU 192.168.1.35\n``` \n\nRealizar um escaneamento rápido, que verifica apenas as portas mais comuns:\n```bash\nnmap 192.168.1.35\n```",
  "Repita o comando anterior": "Repita o comando anterior para listar arquivos, incluindo arquivos ocultos:\n```bash\nls -la\n```\n\nOutra forma de listar arquivos de forma detalhada, incluindo ocultos:\n```bash\nls -A\n```",
  "Faça um scan na porta 22 no ip 192.168.1.35 procurando qual serviço esta aberto, com uma busca profunda": "Use o Nmap para realizar um scan profundo da porta 22 no IP especificado, identificando serviços:\n\n```bash\nnmap -sV -p 22 192.168.1.35\n```\n\nEsta opção verifica a versão do serviço que está rodando na porta 22.\n\nVocê pode também usar o parâmetro `-A` para obter informações adicionais sobre o serviço:\n\n```bash\nnmap -A -p 22 192.168.1.35\n```\n\nEsse comando ativa a detecção de sistema operacional e serviços adicionais.",
  "echo numbers from 1 to 10": "Use a simple `seq` command to print numbers from 1 to 10:\n\n```bash\nseq 1 10\n```\n\nAlternatively, you can use a loop in the `bash` shell to achieve the same result:\n\n```bash\nfor i in {1..10}; do echo $i; done\n```\n\nAnother method using `printf`:\n\n```bash\nprintf \"%d\\n\" {1..10}\n```",
  "echo hello": "Print the string \"hello\" to the terminal:\n```bash\necho hello\n```\n\nDisplay \"hello\" without a newline at the end:\n```bash\necho -n hello\n```\n\nCreate a file and write \"hello\" into it:\n```bash\necho hello > output.txt\n```",
  "write the numbers from 1 to 10 in a file called numebers.txt": "Create a file and write numbers from 1 to 10 using a loop:\n```bash\nfor i in {1..10}; do echo $i >> numbers.txt; done\n```\n\nAlternatively, use `seq` to generate the numbers directly:\n```bash\nseq 1 10 > numbers.txt\n```",
  "replace all occurences of otimes by krn in all files in all subfolder of my directory": "Use `find` with `sed` to replace occurrences in all files recursively:\n\n```bash\nfind . -type f -exec sed -i 's/otimes/krn/g' {} +\n```\n\nThis command finds all files and uses `sed` to perform an in-place substitution for `otimes` with `krn`.",
  "write a terminal command that zooms a tmux pane if not zoomed already": "To zoom the current tmux pane if it is not already zoomed, use the following command:\n\n```bash\ntmux resize-pane -Z\n``` \n\nThis toggles the zoom state of the current pane, expanding it if it's not zoomed.",
  "mount ssh niagara in /mnt/niagara": "Mount an SSH filesystem using SSHFS to the specified directory:\n\n```bash\nsshfs user@niagara:/remote/path /mnt/niagara\n```\n\nUnmount the SSH filesystem when done:\n\n```bash\nfusermount -u /mnt/niagara\n```\n\nEnsure the SSHFS package is installed before using the command:\n\n```bash\nsudo apt-get install sshfs\n```",
  "how to copy the stdin into the clipboard?": "Use `xclip` to copy stdin to the clipboard:\n```bash\nxclip -selection clipboard\n```\n\nAlternatively, use `pbcopy` on macOS:\n```bash\npbcopy\n```\n\nFor systems with `wl-copy` (Wayland):\n```bash\nwl-copy\n```",
  "how to see how much space is used in my home directory?": "To check the total disk space used by your home directory:\n\nUse `du` (disk usage) with human-readable format:\n```bash\ndu -sh ~\n```\n\nFor a more detailed breakdown showing sizes of all directories within your home:\n```bash\ndu -sh ~/*\n```\n\nTo see a sorted list of the largest directories in your home (useful for identifying space hogs):\n```bash\ndu -sh ~/* | sort -hr\n```\n\nNote: The `-h` flag makes sizes human-readable (KB, MB, GB), `-s` shows only the total for each argument, and `~` expands to your home directory path."
}
